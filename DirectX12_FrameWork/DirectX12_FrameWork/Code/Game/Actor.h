/*****************************************************************//**
 * \file   Actor.h
 * \brief  アクタークラス
 * 
 * \author Hiroto Kuge
 * \date   November 2022
 *********************************************************************/

#pragma once


//=============================================================================
// Forword Decolations
//=============================================================================
namespace Game::Scene {
	class Scene;
}


namespace Game::Object{

	//=============================================================================
	// ゲーム世界に「配置」されるゲームオブジェクトの基底クラス
	//=============================================================================
	class Actor{
		//-----------------------------------------------------------------------------
		// list of friend classes and methods.
		//-----------------------------------------------------------------------------
		//!{
				/* Nothing */
		//!} 
	public:
		//-----------------------------------------------------------------------------
		// public variables.
		//-----------------------------------------------------------------------------
		//!{
				/* Nothing */
		//!} 
		//-----------------------------------------------------------------------------
		// public methods.
		//-----------------------------------------------------------------------------
		//!{
	
		/*****************************************************************//**
		 * \brief コンストラクタ
		 *********************************************************************/
		Actor();
		
		/*****************************************************************//**
		 * \brief デストラクタ
		 *********************************************************************/
		virtual ~Actor();
		
		/*****************************************************************//**
		 * \brief 初期化処理
		 *                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             
		 * \return true		初期化に成功
		 * \return false	初期化に失敗
		 *********************************************************************/
		virtual bool Init();
		
		/*****************************************************************//**
		 * \brief 更新処理
		 *  
		 * \param dt デルタタイム
		 *********************************************************************/
		virtual void Update(float dt);
	
		/*****************************************************************//**
		 * \brief 終了処理
		 *********************************************************************/
		virtual void Term();
	
	#pragma region Accessor
		
		/*****************************************************************//**
		 * \brief 座標を取得
		 *  
		 * \return ワールド座標
		 *********************************************************************/
		const Vector3& GetPosition(){return m_position;};
	
		/*****************************************************************//**
		 * \brief クオータニオンを取得
		 * 
		 * \return クオータニオン
		 *********************************************************************/
		const Quaternion& GetQuaternion(){return m_quaternion;};
	
		/*****************************************************************//**
		 * \brief スケールを取得
		 *  
		 * \return スケール
		 *********************************************************************/
		const Vector3& GetScale(){return m_scale;};
	
		/*****************************************************************//**
		 * \brief ワールド変換行列を取得
		 *  
		 * \return ワールド変換行列
		 *********************************************************************/
		const Matrix& GetWorldMtx(){return m_worldMtx;};

		/*****************************************************************//**
		 * \brief ワールド変換行列を更新
		 *********************************************************************/
		void UpdateWorldMtx();
	
	#pragma endregion
		//!}
	protected:
		//-----------------------------------------------------------------------------
		// protected variables.
		//-----------------------------------------------------------------------------
		//!{
		
		//std::shared_ptr<Game::Scene::Scene>	m_pSceneDI;		// 存在するシーンオブジェクトのポインタ
	
	#pragma region transformation_matrix
	
		Vector3		m_position;		// ワールド座標
		Quaternion	m_quaternion;	// 回転
		Vector3		m_scale;		// スケール
		Matrix		m_worldMtx;		// ワールド変換行列
	
	#pragma endregion

	#pragma region Render
		       
	#pragma endregion

		//!}
		//-----------------------------------------------------------------------------
		// protected methods.
		//-----------------------------------------------------------------------------
		//!{
				/* Nothing */
		//!} 
	private:
		//!{
				/* Nothing */
		//!}
		//-----------------------------------------------------------------------------
		// protected methods.
		//-----------------------------------------------------------------------------
		//!{
				/* Nothing */
		//!} 
	};
}



