/*****************************************************************//**
 * \file   PipelineState.h
 * \brief  グラフィクスパイプラインステートオブジェクトクラス
 * 
 * \author Hiroto Kuge
 * \date   October 2022
 *********************************************************************/
#pragma once

//=============================================================================
// PipelineState Class
//=============================================================================
class PipelineState{
	//-----------------------------------------------------------------------------
	// list of friend classes and methods.
	//-----------------------------------------------------------------------------
	//!{
			/* Nothing */
	//!} 
public:
	//-----------------------------------------------------------------------------
	// public variables.
	//-----------------------------------------------------------------------------
	//!{
			/* Nothing */
	//!} 
	//-----------------------------------------------------------------------------
	// public methods.
	//-----------------------------------------------------------------------------
	//!{
	 
	PipelineState() {};

	/*****************************************************************//**
	 * \brief デストラクタ
	 *********************************************************************/
	~PipelineState();
	
	/*****************************************************************//**
	 * \brief 初期化処理
	 *
	 * \param desc				構成設定
	 * \param pVsPath			頂点シェーダーパス
	 * \param pPsPath			ピクセルシェーダーパス
	 * \param rootSignature		ルートシグネチャ
	 * \return true				初期化に成功
	 * \return false			初期化に失敗
	 *********************************************************************/
	void Init(
		D3D12_GRAPHICS_PIPELINE_STATE_DESC& desc,
		const wchar_t* pVsPath,
		const wchar_t* pPsPath,
		ID3D12RootSignature* pRootSignature);

	/*****************************************************************//**
	 * \brief 初期化
	 * \param desc	初期化設定
	 *********************************************************************/
	void Init(D3D12_GRAPHICS_PIPELINE_STATE_DESC desc);
	void Init(D3D12_COMPUTE_PIPELINE_STATE_DESC desc);


	/*****************************************************************//**
	 * \brief パイプラインステートオブジェクトを取得
	 *  
	 * \return パイプラインステートオブジェクト(ポインタ)
	 *********************************************************************/
	ID3D12PipelineState* Get() { 
		return m_pPipelineState.Get(); 
	}


	//!}
private:
	//-----------------------------------------------------------------------------
	// private variables.
	//-----------------------------------------------------------------------------
	//!{
			
	ComPtr<ID3D12PipelineState>			m_pPipelineState;	// パイプラインステート
	ComPtr<ID3DBlob>					m_pVsBlob;			// 頂点シェーダー
	ComPtr<ID3DBlob>					m_pPsBlob;			// ピクセルシェーダー

	//!}
	//-----------------------------------------------------------------------------
	// private methods.
	//-----------------------------------------------------------------------------
	//!{

	PipelineState(const PipelineState&) = delete;		// アクセス禁止
	void operator = (const PipelineState&) = delete;	// アクセス禁止

	//!} 
};

